reward :
	p2.score    // shift_address = 0x0e1c
	p1.score    // shift_address = 0x0e20
	// ball_y == player_y : 5 / 152 * (152 - |ball_y - player_y|)
	// over the net : 50 points
	// win the game : 100 points
	// loss the game : -50 points
	// discount : 0.8
	
flag : // shift_address = 0x0e28
	1 : game start
	2 : gaming
	3 : game end
	4 : game set
	10 : begin screen

state :
	player2.y   // shift_address = 0x0ee8 // data_size = 4bits // init = 36  // range = 32  ~ 184
	player2.x   // shift_address = 0x0eec // data_size = 4bits // init = 244 // range = 108 ~ 244
	player1.y   // shift_address = 0x5310 // data_size = 8bits // init = 396 // range = 248 ~ 400
	player1.x   // shift_address = 0x5314 // data_size = 4bits // init = 244 // range = 108 ~ 244
	ball.y      // shift_address = 0x64e0 // data_size = 8bits // init = 56  // range = 0   ~ 432
	ball.x      // shift_address = 0x64e4 // data_size = 4bits // init = 0   // range = 0   ~ 252
	player2.vy  // player2.y(0.1s after) - player2.y
	player2.vx  // player2.x(0.1s after) - player2.x
	player1.vy  // player1.y(0.1s after) - player1.y
	player1.vx  // player1.x(0.1s after) - player1.x
	ball.vy     // ball.y(0.1s after) - ball.y
	ball.vx     // ball.x(0.1s after) - ball.x
	left is pressed   // 1 or 0
	right is pressed  // 1 or 0
	up is pressed     // 1 or 0
	down is pressed   // 1 or 0

action :
	0. release all key
	1. left
	2. right
	3. up
	4. down
	5. power
